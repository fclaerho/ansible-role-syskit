---

- name: Managed users facts are set
  set_fact:
    syskit_homedir: "{{ syskit_users_basedir[ansible_os_family|lower] }}"

# deluser will segfault if LANG!=C
# REF: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=660406
- name: Managed users are present/absent
  with_items: syskit_users
  environment:
    LANG: C
    LC_CTYPE: C
  user:
    name: "{{ item.name }}"
    home: "{{ item.home or (syskit_homedir + '/' + item.name) }}"
    state: "{{ item.state }}"
    groups: "{{ item.groups|join(',') }}"
    remove: yes

- name: Managed users .ssh/ directories are present
  with_items: syskit_users
  when: item.state == "present" and item.sshkeys
  file:
    name: "{{ item.home or (syskit_homedir + '/' + item.name) }}/.ssh"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: "700"

- name: Managed users private keys are present
  with_subelements:
  - syskit_users
  - sshkeys
  when: item.0.state == "present" and item.1.state == "present"
  copy:
    content: "{{ item.1.keyval }}"
    dest: "{{ item.0.home or (syskit_homedir + '/' + item.0.name) }}/.ssh/{{ item.1.name }}"
    owner: "{{ item.0.name }}"
    group: "{{ item.0.name }}"
    mode: "600"

- name: Managed users private keys are absent
  with_subelements:
  - syskit_users
  - sshkeys
  when: item.0.state == "present" or item.1.state == "absent"
  file:
    path: "{{ item.0.home or (syskit_homedir + '/' + item.0.name) }}/.ssh/{{ item.1.name }}"
    state: absent

- name: Managed users public keys are present
  with_subelements:
  - syskit_users
  - sshkeys
  when: item.0.state == "present" and item.1.state == "present"
  copy:
    content: "{{ item.1.pubval }}"
    dest: "{{ item.0.home or (syskit_homedir + '/' + item.0.name) }}/.ssh/{{ item.1.name }}.pub"
    owner: jenkins
    group: jenkins
    mode: "644"

- name: Managed users public keys are absent
  with_subelements:
  - syskit_users
  - sshkeys
  when: item.0.state == "present" or item.1.state == "absent"
  file:
    path: "{{ item.0.home or (syskit_homedir + '/' + item.0.name) }}/.ssh/{{ item.1.name }}.pub"
    state: absent

- name: Managed users sudoer conf is present
  with_items: syskit_users
  when: item.state == "present" and item.sudoer
  template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/{{ item.name }}"
    mode: "440"
    owner: root
    group: root

- name: Managed users sudoer conf is absent
  with_items: syskit_users
  when: item.state == "absent" or not item.sudoer
  file:
    path: "/etc/sudoers.d/{{ item.name }}"
    state: absent

- name: Managed users authorized keys are present/absent
  with_subelements:
  - syskit_users
  - authorized_keys
  when: item.0.state == "present" or item.1.state == "absent"
  authorized_key:
    key: item.1.val
    user: item.0.name
    state: item.1.state

- name: Root account password is locked -- use an authorized user account for subsequent provisionings
  when: syskit_root_pw_locked and ansible_ssh_user != 'root'
  command: passwd -l root

- name: Root account password is unlocked
  when: not syskit_root_pw_locked
  command: passwd -u root

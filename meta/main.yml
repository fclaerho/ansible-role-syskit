---
dependencies: []
galaxy_info:
  author: Florent Claerhout <code@fclaerhout.fr>
  description: >
    System Integration Kit.
    Integrate services and tools by configuring system specific concerns
    such as users, logging, services, proxying, firewalling and so on.
    See the usage section for the exhaustive list of configurable concerns.
  license: MIT
  min_ansible_version: 1.8.4
  platforms:
  - name: Ubuntu
    versions:
    - all
  - name: Debian
    versions:
    - all
version: 0.1
prefix: syskit_
variables:
  syskit_logrotate_modules: "List of dict {'name', 'path', 'size', 'state': present/absent, 'rotate'}"
  syskit_logrotate_autopurge: "Boolean. Purge logrotate if no module is defined"
  syskit_upstart_manifests: "List of dict {'uid', 'name', 'argv', 'state': present/absent, 'daemon', 'description'}"
  syskit_sysv_manifests: "List of dict {'uid', 'name', 'argv', 'state': present/absent, 'daemon', ['pidfile'], 'description'}"
  syskit_nginx_sites: "List of dict {'state': present/absent, 'enabled': yes/no, 'upstream': {'name', 'address', 'port', ['timeout':4], 'protocol'}, 'server': {'name', ['port'], 'tls': [{'crtpath', 'keyval'}], ['default': no]} }"
  syskit_nginx_autopurge: "Boolean. Purge nginx if no site is defined"
  syskit_ferm_rules: "List of dict {'name', ['daddr'], ['proto'], ['dport'], 'state': present/absent}"
  syskit_users: "List of dict {'name', 'home', 'groups', 'state': present/absent, 'sudoer': yes/no, 'sshkeys': {'name', 'keyval', 'pubpath', 'state': present/absent}…, 'authorized_keys': {'val', 'state': present/absent}…}"
  syskit_root_pw_locked: "Boolean. If set, lock root password (recommended)"
  syskit_apt_proxy: "Dict {'http': {'hostname', ['directs']}, 'https': {'hostname', ['directs ']}}"
include_when:
  #logrotate.yml: syskit_logrotate_modules <- no, as we need to purge packages if autopurge is on
  upstart.yml: syskit_upstart_manifests
  #nginx.yml: syskit_nginx_sites <- no, as we need to purge packages if autopurge is on
  users.yml: syskit_users
  sysv.yml: syskit_sysv_manifests
  #ferm.yml: syskit_ferm_rules <- no, as we need to collapse ferm.d/ if there's no rule
  apt.yml: syskit_apt_proxy
usage_complement: |
  This role is registered on [Galaxy](https://galaxy.ansible.com/detail#/role/6063) as `fclaerho.syskit`.

  The integration work is typically done at the playbook level:
  use 3rd-party roles to provision tools and services then
  set `syskit_*` variables to configure the system concerns.

  Configurable concerns:

    * **Reverse Proxying**: create/delete/update vhosts
      * [Nginx](http://nginx.org/en/) — `syskit_nginx_*`
    * **Log Management**:
      * [Logrotate](http://www.linuxcommand.org/man_pages/logrotate8.html) — `syskit_logrotate_*`
    * **Firewalling**: create/delete/update rules
      * [Ferm](http://ferm.foo-projects.org) — `syskit_ferm_rules`
    * **Services**: create/delete/update manifests
      * [Upstart](http://upstart.ubuntu.com/cookbook/) — `syskit_upstart_manifests`
      * [SysV](https://en.wikipedia.org/wiki/Init#SysV-style) — `syskit_sysv_manifests`
    * **Users**: create/delete/update accounts — `syskit_users`
    * **Misc**:
      * Lock/Unlock the root account — `syskit_root_pw_locked`
      * Configure Apt proxy — `syskit_apt_proxy`

  **NOTICE:** All private keys `*.keyval` are expected to be securely stored via [Ansible-vault](http://docs.ansible.com/ansible/playbooks_vault.html) (or any equivalent.) Public assets (certificates `*.crtpath`, public keys `*.pubpath`) are expected to be files copied over.
